{"version":3,"file":"canvas-particle-container.js","sources":["../../src/ParticleContainer.ts"],"sourcesContent":["import { ParticleContainer } from '@pixi/particle-container';\nimport type { Sprite } from '@pixi/sprite';\nimport type { CanvasRenderer } from '@pixi/canvas-renderer';\n\n/**\n * Renders the object using the Canvas renderer\n * @method renderCanvas\n * @memberof PIXI.ParticleContainer#\n * @private\n * @param {PIXI.CanvasRenderer} renderer - a reference to the canvas renderer\n */\nParticleContainer.prototype.renderCanvas = function renderCanvas(renderer: CanvasRenderer): void\n{\n    if (!this.visible || this.worldAlpha <= 0 || !this.children.length || !this.renderable)\n    {\n        return;\n    }\n\n    const context = renderer.context;\n    const transform = this.worldTransform;\n    let isRotated = true;\n\n    let positionX = 0;\n    let positionY = 0;\n\n    let finalWidth = 0;\n    let finalHeight = 0;\n\n    renderer.setBlendMode(this.blendMode);\n\n    context.globalAlpha = this.worldAlpha;\n\n    this.displayObjectUpdateTransform();\n\n    for (let i = 0; i < this.children.length; ++i)\n    {\n        const child = this.children[i] as Sprite;\n\n        if (!child.visible)\n        {\n            continue;\n        }\n\n        if (!child._texture.valid)\n        {\n            continue;\n        }\n\n        const frame = child._texture.frame;\n\n        context.globalAlpha = this.worldAlpha * child.alpha;\n\n        if (child.rotation % (Math.PI * 2) === 0)\n        {\n            // this is the fastest  way to optimise! - if rotation is 0 then we can avoid any kind of setTransform call\n            if (isRotated)\n            {\n                renderer.setContextTransform(transform, false, 1);\n                isRotated = false;\n            }\n\n            positionX = ((child.anchor.x) * (-frame.width * child.scale.x)) + child.position.x + 0.5;\n            positionY = ((child.anchor.y) * (-frame.height * child.scale.y)) + child.position.y + 0.5;\n\n            finalWidth = frame.width * child.scale.x;\n            finalHeight = frame.height * child.scale.y;\n        }\n        else\n        {\n            if (!isRotated)\n            {\n                isRotated = true;\n            }\n\n            child.displayObjectUpdateTransform();\n\n            const childTransform = child.worldTransform;\n\n            renderer.setContextTransform(childTransform, this.roundPixels, 1);\n\n            positionX = ((child.anchor.x) * (-frame.width)) + 0.5;\n            positionY = ((child.anchor.y) * (-frame.height)) + 0.5;\n\n            finalWidth = frame.width;\n            finalHeight = frame.height;\n        }\n\n        const resolution = child._texture.baseTexture.resolution;\n\n        context.drawImage(\n            child._texture.baseTexture.getDrawableSource(),\n            frame.x * resolution,\n            frame.y * resolution,\n            frame.width * resolution,\n            frame.height * resolution,\n            positionX * renderer.resolution,\n            positionY * renderer.resolution,\n            finalWidth * renderer.resolution,\n            finalHeight * renderer.resolution\n        );\n    }\n};\n"],"names":["ParticleContainer"],"mappings":"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"}