{"version":3,"file":"canvas-mesh.js","sources":["../../src/CanvasMeshRenderer.ts","../../src/settings.ts","../../src/MeshMaterial.ts","../../src/NineSlicePlane.ts","../../src/Mesh.ts","../../src/SimpleMesh.ts","../../src/SimpleRope.ts"],"sourcesContent":["import { Texture } from '@pixi/core';\nimport { DRAW_MODES } from '@pixi/constants';\nimport { canvasUtils } from '@pixi/canvas-renderer';\n\nimport type { CanvasRenderer } from '@pixi/canvas-renderer';\nimport type { Mesh } from '@pixi/mesh';\n\n/**\n * Renderer dedicated to meshes.\n *\n * @class\n * @protected\n * @memberof PIXI\n */\nexport class CanvasMeshRenderer\n{\n    /** A reference to the current renderer */\n    public renderer: CanvasRenderer;\n\n    /** @param renderer - A reference to the current renderer */\n    constructor(renderer: CanvasRenderer)\n    {\n        this.renderer = renderer;\n    }\n\n    /**\n     * Renders the Mesh\n     *\n     * @param mesh - the Mesh to render\n     */\n    public render(mesh: Mesh): void\n    {\n        const renderer = this.renderer;\n        const transform = mesh.worldTransform;\n\n        renderer.context.globalAlpha = mesh.worldAlpha;\n        renderer.setBlendMode(mesh.blendMode);\n        renderer.setContextTransform(transform, mesh.roundPixels);\n\n        if (mesh.drawMode !== DRAW_MODES.TRIANGLES)\n        {\n            this._renderTriangleMesh(mesh);\n        }\n        else\n        {\n            this._renderTriangles(mesh);\n        }\n    }\n\n    /**\n     * Draws the object in Triangle Mesh mode\n     *\n     * @private\n     * @param mesh - the Mesh to render\n     */\n    private _renderTriangleMesh(mesh: Mesh): void\n    {\n        // draw triangles!!\n        const length = mesh.geometry.buffers[0].data.length;\n\n        for (let i = 0; i < length - 2; i++)\n        {\n            // draw some triangles!\n            const index = i * 2;\n\n            this._renderDrawTriangle(mesh, index, (index + 2), (index + 4));\n        }\n    }\n\n    /**\n     * Draws the object in triangle mode using canvas\n     *\n     * @private\n     * @param mesh - the current mesh\n     */\n    private _renderTriangles(mesh: Mesh): void\n    {\n        // draw triangles!!\n        const indices = mesh.geometry.getIndex().data;\n        const length = indices.length;\n\n        for (let i = 0; i < length; i += 3)\n        {\n            // draw some triangles!\n            const index0 = indices[i] * 2;\n            const index1 = indices[i + 1] * 2;\n            const index2 = indices[i + 2] * 2;\n\n            this._renderDrawTriangle(mesh, index0, index1, index2);\n        }\n    }\n\n    /**\n     * Draws one of the triangles that from the Mesh\n     *\n     * @private\n     * @param mesh - the current mesh\n     * @param index0 - the index of the first vertex\n     * @param index1 - the index of the second vertex\n     * @param index2 - the index of the third vertex\n     */\n    private _renderDrawTriangle(mesh: Mesh, index0: number, index1: number, index2: number): void\n    {\n        const context = this.renderer.context;\n        const vertices = mesh.geometry.buffers[0].data;\n        const { uvs, texture } = mesh;\n\n        if (!texture.valid)\n        {\n            return;\n        }\n        const isTinted = mesh.tint !== 0xFFFFFF;\n        const base = texture.baseTexture;\n        const textureWidth = base.width;\n        const textureHeight = base.height;\n\n        if (isTinted)\n        {\n            if (mesh._cachedTint !== mesh.tint)\n            {\n                mesh._cachedTint = mesh.tint;\n                mesh._cachedTexture = mesh._cachedTexture || new Texture(base);\n                mesh._tintedCanvas = canvasUtils.getTintedCanvas(\n                    { texture: mesh._cachedTexture },\n                    mesh.tint\n                ) as HTMLCanvasElement;\n            }\n        }\n\n        const textureSource = isTinted ? mesh._tintedCanvas : base.getDrawableSource();\n\n        const u0 = uvs[index0] * base.width;\n        const u1 = uvs[index1] * base.width;\n        const u2 = uvs[index2] * base.width;\n        const v0 = uvs[index0 + 1] * base.height;\n        const v1 = uvs[index1 + 1] * base.height;\n        const v2 = uvs[index2 + 1] * base.height;\n\n        let x0 = vertices[index0];\n        let x1 = vertices[index1];\n        let x2 = vertices[index2];\n        let y0 = vertices[index0 + 1];\n        let y1 = vertices[index1 + 1];\n        let y2 = vertices[index2 + 1];\n\n        const screenPadding = mesh.canvasPadding / this.renderer.resolution;\n\n        if (screenPadding > 0)\n        {\n            const { a, b, c, d } = mesh.worldTransform;\n\n            const centerX = (x0 + x1 + x2) / 3;\n            const centerY = (y0 + y1 + y2) / 3;\n\n            let normX = x0 - centerX;\n            let normY = y0 - centerY;\n\n            // Transform to screen space and calculate the distance\n            let screenX = (a * normX) + (c * normY);\n            let screenY = (b * normX) + (d * normY);\n            let screenDist = Math.sqrt((screenX * screenX) + (screenY * screenY));\n\n            // Factor by which to scale in order to add padding equal to screenPadding\n            let paddingFactor = 1 + (screenPadding / screenDist);\n\n            x0 = centerX + (normX * paddingFactor);\n            y0 = centerY + (normY * paddingFactor);\n\n            normX = x1 - centerX;\n            normY = y1 - centerY;\n\n            screenX = (a * normX) + (c * normY);\n            screenY = (b * normX) + (d * normY);\n            screenDist = Math.sqrt((screenX * screenX) + (screenY * screenY));\n\n            paddingFactor = 1 + (screenPadding / screenDist);\n\n            x1 = centerX + (normX * paddingFactor);\n            y1 = centerY + (normY * paddingFactor);\n\n            normX = x2 - centerX;\n            normY = y2 - centerY;\n\n            screenX = (a * normX) + (c * normY);\n            screenY = (b * normX) + (d * normY);\n            screenDist = Math.sqrt((screenX * screenX) + (screenY * screenY));\n\n            paddingFactor = 1 + (screenPadding / screenDist);\n\n            x2 = centerX + (normX * paddingFactor);\n            y2 = centerY + (normY * paddingFactor);\n        }\n\n        context.save();\n        context.beginPath();\n\n        context.moveTo(x0, y0);\n        context.lineTo(x1, y1);\n        context.lineTo(x2, y2);\n\n        context.closePath();\n\n        context.clip();\n\n        // Compute matrix transform\n        const delta = (u0 * v1) + (v0 * u2) + (u1 * v2) - (v1 * u2) - (v0 * u1) - (u0 * v2);\n        const deltaA = (x0 * v1) + (v0 * x2) + (x1 * v2) - (v1 * x2) - (v0 * x1) - (x0 * v2);\n        const deltaB = (u0 * x1) + (x0 * u2) + (u1 * x2) - (x1 * u2) - (x0 * u1) - (u0 * x2);\n        const deltaC = (u0 * v1 * x2) + (v0 * x1 * u2) + (x0 * u1 * v2) - (x0 * v1 * u2) - (v0 * u1 * x2) - (u0 * x1 * v2);\n        const deltaD = (y0 * v1) + (v0 * y2) + (y1 * v2) - (v1 * y2) - (v0 * y1) - (y0 * v2);\n        const deltaE = (u0 * y1) + (y0 * u2) + (u1 * y2) - (y1 * u2) - (y0 * u1) - (u0 * y2);\n        const deltaF = (u0 * v1 * y2) + (v0 * y1 * u2) + (y0 * u1 * v2) - (y0 * v1 * u2) - (v0 * u1 * y2) - (u0 * y1 * v2);\n\n        context.transform(\n            deltaA / delta,\n            deltaD / delta,\n            deltaB / delta,\n            deltaE / delta,\n            deltaC / delta,\n            deltaF / delta\n        );\n\n        context.drawImage(\n            textureSource,\n            0,\n            0,\n            textureWidth * base.resolution,\n            textureHeight * base.resolution,\n            0,\n            0,\n            textureWidth,\n            textureHeight\n        );\n\n        context.restore();\n        this.renderer.invalidateBlendMode();\n    }\n\n    /**\n     * Renders a flat Mesh\n     *\n     * @private\n     * @param mesh - The Mesh to render\n     */\n    renderMeshFlat(mesh: Mesh): void\n    {\n        const context = this.renderer.context;\n        const vertices = mesh.geometry.getBuffer('aVertexPosition').data;\n        const length = vertices.length / 2;\n\n        // this.count++;\n\n        context.beginPath();\n\n        for (let i = 1; i < length - 2; ++i)\n        {\n            // draw some triangles!\n            const index = i * 2;\n\n            const x0 = vertices[index];\n            const y0 = vertices[index + 1];\n\n            const x1 = vertices[index + 2];\n            const y1 = vertices[index + 3];\n\n            const x2 = vertices[index + 4];\n            const y2 = vertices[index + 5];\n\n            context.moveTo(x0, y0);\n            context.lineTo(x1, y1);\n            context.lineTo(x2, y2);\n        }\n\n        context.fillStyle = '#FF0000';\n        context.fill();\n        context.closePath();\n    }\n\n    /** destroy the renderer */\n    public destroy(): void\n    {\n        this.renderer = null;\n    }\n}\n","import { settings } from '@pixi/settings';\n\n/**\n * Default `canvasPadding` for canvas-based Mesh rendering.\n *\n * @see PIXI.Mesh2d#canvasPadding\n * @static\n * @memberof PIXI.settings\n * @member {number}\n * @default 0\n */\nsettings.MESH_CANVAS_PADDING = 0;\n\nexport { settings };\n","import { MeshMaterial } from '@pixi/mesh';\n\nimport type { Mesh } from '@pixi/mesh';\nimport type { CanvasRenderer } from '@pixi/canvas-renderer';\n\n/**\n * Renders the mesh using the Canvas renderer\n *\n * @protected\n * @method render\n * @memberof PIXI.MeshMaterial#\n * @param {PIXI.CanvasRenderer} renderer - The canvas renderer.\n * @param {PIXI.Mesh} mesh - Mesh to render.\n */\nMeshMaterial.prototype._renderCanvas = function _renderCanvas(renderer: CanvasRenderer, mesh: Mesh): void\n{\n    renderer.plugins.mesh.render(mesh);\n};\n","import { canvasUtils } from '@pixi/canvas-renderer';\nimport { NineSlicePlane } from '@pixi/mesh-extras';\n\nimport type { CanvasRenderer } from '@pixi/canvas-renderer';\n\n/**\n * Cached tint value so we can tell when the tint is changed.\n * @memberof PIXI.NineSlicePlane#\n * @member {number} _cachedTint\n * @protected\n */\nNineSlicePlane.prototype._cachedTint = 0xFFFFFF;\n\n/**\n * Cached tinted texture.\n * @memberof PIXI.NineSlicePlane#\n * @member {HTMLCanvasElement} _tintedCanvas\n * @protected\n */\nNineSlicePlane.prototype._tintedCanvas = null;\n\n/**\n * Temporary storage for canvas source coords\n * @memberof PIXI.NineSlicePlane#\n * @member {number[]} _canvasUvs\n * @private\n */\nNineSlicePlane.prototype._canvasUvs = null;\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @private\n * @method _renderCanvas\n * @memberof PIXI.NineSlicePlane#\n * @param {PIXI.CanvasRenderer} renderer - The canvas renderer to render with.\n */\nNineSlicePlane.prototype._renderCanvas = function _renderCanvas(renderer: CanvasRenderer): void\n{\n    const context = renderer.context;\n    const transform = this.worldTransform;\n    const isTinted = this.tint !== 0xFFFFFF;\n    const texture = this.texture;\n\n    if (!texture.valid)\n    {\n        return;\n    }\n\n    // Work out tinting\n    if (isTinted)\n    {\n        if (this._cachedTint !== this.tint)\n        {\n            // Tint has changed, need to update the tinted texture and use that instead\n\n            this._cachedTint = this.tint;\n\n            this._tintedCanvas = canvasUtils.getTintedCanvas(this, this.tint) as HTMLCanvasElement;\n        }\n    }\n\n    const textureSource = !isTinted ? texture.baseTexture.getDrawableSource() : this._tintedCanvas;\n\n    if (!this._canvasUvs)\n    {\n        this._canvasUvs = [0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    const vertices = this.vertices;\n    const uvs = this._canvasUvs;\n    const u0 = isTinted ? 0 : texture.frame.x;\n    const v0 = isTinted ? 0 : texture.frame.y;\n    const u1 = u0 + texture.frame.width;\n    const v1 = v0 + texture.frame.height;\n\n    uvs[0] = u0;\n    uvs[1] = u0 + this._leftWidth;\n    uvs[2] = u1 - this._rightWidth;\n    uvs[3] = u1;\n    uvs[4] = v0;\n    uvs[5] = v0 + this._topHeight;\n    uvs[6] = v1 - this._bottomHeight;\n    uvs[7] = v1;\n\n    for (let i = 0; i < 8; i++)\n    {\n        uvs[i] *= texture.baseTexture.resolution;\n    }\n\n    context.globalAlpha = this.worldAlpha;\n    renderer.setBlendMode(this.blendMode);\n    renderer.setContextTransform(transform, this.roundPixels);\n\n    for (let row = 0; row < 3; row++)\n    {\n        for (let col = 0; col < 3; col++)\n        {\n            const ind = (col * 2) + (row * 8);\n            const sw = Math.max(1, uvs[col + 1] - uvs[col]);\n            const sh = Math.max(1, uvs[row + 5] - uvs[row + 4]);\n            const dw = Math.max(1, vertices[ind + 10] - vertices[ind]);\n            const dh = Math.max(1, vertices[ind + 11] - vertices[ind + 1]);\n\n            context.drawImage(textureSource, uvs[col], uvs[row + 4], sw, sh,\n                vertices[ind], vertices[ind + 1], dw, dh);\n        }\n    }\n};\n","import { Mesh } from '@pixi/mesh';\nimport { settings } from './settings';\n\nimport type { CanvasRenderer } from '@pixi/canvas-renderer';\n\nlet warned = false;\n\n/**\n * Cached tint value so we can tell when the tint is changed.\n * @memberof PIXI.Mesh#\n * @member {number} _cachedTint\n * @protected\n */\nMesh.prototype._cachedTint = 0xFFFFFF;\n\n/**\n * Cached tinted texture.\n * @memberof PIXI.Mesh#\n * @member {HTMLCanvasElement} _tintedCanvas\n * @protected\n */\nMesh.prototype._tintedCanvas = null;\n\n/**\n * The cache texture is used to generate `_tintedCanvas`.\n * @memberof PIXI.Mesh#\n * @member {PIXI.Texture} _cachedTexture\n * @protected\n */\nMesh.prototype._cachedTexture = null;\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @private\n * @method _renderCanvas\n * @memberof PIXI.Mesh#\n * @param {PIXI.CanvasRenderer} renderer - The canvas renderer.\n */\nMesh.prototype._renderCanvas = function _renderCanvas(renderer: CanvasRenderer): void\n{\n    if (this.shader.uvMatrix)\n    {\n        this.shader.uvMatrix.update();\n        this.calculateUvs();\n    }\n\n    if (this.material._renderCanvas)\n    {\n        this.material._renderCanvas(renderer, this);\n    }\n    else if (!warned)\n    {\n        warned = true;\n        if (globalThis.console)\n        {\n            console.warn('Mesh with custom shaders are not supported in CanvasRenderer.');\n        }\n    }\n};\n\n// IMPORTANT: Please do NOT use this as a precedent to use `settings` after the object is created\n// this was merely created to completely decouple canvas from the base Mesh class and we are\n// unable to add `canvasPadding` in the constructor anymore, as the case was for PixiJS v4.\n\n/**\n * Internal variable for `canvasPadding`.\n *\n * @private\n * @memberof PIXI.Mesh\n * @member {number}\n * @default null\n */\nMesh.prototype._canvasPadding = null;\n\n/**\n * Triangles in canvas mode are automatically antialiased, use this value to force triangles\n * to overlap a bit with each other. To set the global default, set {@link PIXI.settings.MESH_CANVAS_PADDING}\n *\n * @see PIXI.settings.MESH_CANVAS_PADDING\n * @member {number} canvasPadding\n * @memberof PIXI.SimpleMesh#\n * @default 0\n */\nObject.defineProperty(Mesh.prototype, 'canvasPadding', {\n    get()\n    {\n        return this._canvasPadding !== null ? this._canvasPadding : settings.MESH_CANVAS_PADDING;\n    },\n    set(value)\n    {\n        this._canvasPadding = value;\n    },\n});\n","import { SimpleMesh } from '@pixi/mesh-extras';\n\nimport type { CanvasRenderer } from '@pixi/canvas-renderer';\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @private\n * @method _renderCanvas\n * @memberof PIXI.Mesh#\n * @param {PIXI.CanvasRenderer} renderer - The canvas renderer.\n */\nSimpleMesh.prototype._renderCanvas = function _renderCanvas(renderer: CanvasRenderer): void\n{\n    if (this.autoUpdate)\n    {\n        this.geometry.getBuffer('aVertexPosition').update();\n    }\n\n    if (this.shader.update)\n    {\n        this.shader.update();\n    }\n\n    this.calculateUvs();\n\n    this.material._renderCanvas(renderer, this);\n};\n","import { SimpleRope } from '@pixi/mesh-extras';\n\nimport type { RopeGeometry } from '@pixi/mesh-extras';\nimport type { CanvasRenderer } from '@pixi/canvas-renderer';\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @protected\n * @method _renderCanvas\n * @memberof PIXI.Mesh#\n * @param {PIXI.CanvasRenderer} renderer - The canvas renderer.\n */\nSimpleRope.prototype._renderCanvas = function _renderCanvas(renderer: CanvasRenderer): void\n{\n    if (this.autoUpdate\n        || (this.geometry as RopeGeometry)._width !== this.shader.texture.height)\n    {\n        (this.geometry as RopeGeometry)._width = this.shader.texture.height;\n        (this.geometry as RopeGeometry).update();\n    }\n\n    if (this.shader.update)\n    {\n        this.shader.update();\n    }\n\n    this.calculateUvs();\n\n    this.material._renderCanvas(renderer, this);\n};\n"],"names":["DRAW_MODES","Texture","canvasUtils","settings","MeshMaterial","NineSlicePlane","Mesh","SimpleMesh","SimpleRope"],"mappings":"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"}